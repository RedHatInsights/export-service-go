openapi: 3.0.1
info:
  title: consoledot Export Service - Public API
  version: 0.1.0
servers:
  - url: '{server}/api/export/v1'
    variables:
      server:
        default: 'http://localhost:8080'
paths:
  /exports:
    post:
      description: >-
        Creates a new export request. Use this endpoint to create an export
        request that will call the solicited services so that the services can
        gather the requested data.
      summary: Create a new export request
      operationId: createExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '200':
          description: Export scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportStatus'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - 3ScaleIdentity: []
    get:
      operationId: getExports
      description: >-
        Provides a list of export requests and the resolution status of each
        request. Use this endpoint to review all of the export requests that the
        user has requested.
      summary: List the export requests
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: created_at
          description: Date follows the ISO8601 standard or YYYY-MM-DD
          in: query
          schema:
            type: string
            format: date
        - name: expires_at
          description: Date follows the ISO8601 standard or YYYY-MM-DD
          in: query
          schema:
            type: string
            format: date
        - name: application
          in: query
          schema:
            type: string
            example: 'urn:redhat:application:notifications'
        - name: resource
          in: query
          schema:
            type: string
            example: 'urn:redhat:application:notifications:export:events'
        - name: offset
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
            enum:
              - name
              - created_at
              - expires_at
              - application
              - resource
        - name: dir
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: Matching Exports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportList'
        '500':
          description: Unexpected server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - 3ScaleIdentity: []
  '/exports/{id}':
    get:
      summary: Download the exported data
      description: >-
        Download the exported data from the specified export request. When the
        export request is ready, use this endpoint to download the exported
        data.
      operationId: downloadExport
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
      responses:
        '200':
          description: Export data
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Not ready for download
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - 3ScaleIdentity: []
    delete:
      summary: Delete an existing export request
      description: >-
        Delete the specified export request. Use this endpoint to delete
        available export requests.
      operationId: deleteExport
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
      responses:
        '202':
          description: Export deleted (if it existed)
        '400':
          description: Not a valid export UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error deleting payload entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - 3ScaleIdentity: []
  '/exports/{id}/status':
    get:
      summary: Check the status of the export request
      description: >-
        Check the status of the specified export request. Use this endpoint to
        check the status of an export request.
      operationId: getExportStatus
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
      responses:
        '200':
          description: Export status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportStatus'
        '500':
          description: Unexpected server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - 3ScaleIdentity: []
components:
  schemas:
    Format:
      type: string
      enum:
        - json
        - csv
    UUID:
      type: string
      format: uuid
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      minLength: 36
      maxLength: 36
    Status:
      type: string
      enum:
        - partial
        - pending
        - running
        - complete
        - failed
    ErrorMessage:
      type: string
    Error:
      type: integer
    ExportRequestResource:
      description: >-
        A resource to be exported (no status or id) used only to create a new
        export.
      type: object
      required:
        - application
        - resource
      properties:
        application:
          type: string
        resource:
          type: string
        filters:
          type: object
    ExportRequest:
      description: >-
        A request to export data for specific resources (no status or id) used
        only to create a new export.
      type: object
      required:
        - name
        - format
        - sources
      properties:
        name:
          type: string
        expires_at:
          type: string
          format: date-time
        format:
          $ref: '#/components/schemas/Format'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/ExportRequestResource'
    ExportResource:
      description: A resource to be exported
      allOf:
        - $ref: '#/components/schemas/ExportRequestResource'
        - type: object
          required:
            - id
            - status
            - expires_at
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            status:
              $ref: '#/components/schemas/Status'
            message:
              $ref: '#/components/schemas/ErrorMessage'
            error:
              $ref: '#/components/schemas/Error'
    Export:
      description: A request to export data for specific resources
      allOf:
        - $ref: '#/components/schemas/ExportRequest'
        - type: object
          required:
            - id
            - created_at
            - status
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            created_at:
              type: string
              format: date-time
            completed_at:
              type: string
              format: date-time
            expires_at:
              type: string
              format: date-time
            status:
              $ref: '#/components/schemas/Status'
    ExportStatus:
      type: object
      required:
        - id
        - name
        - created_at
        - format
        - status
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        format:
          $ref: '#/components/schemas/Format'
        status:
          $ref: '#/components/schemas/Status'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/ExportResource'
    PageLinks:
      type: object
      properties:
        first:
          type: string
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        last:
          type: string
      required:
        - first
        - last
    ExportList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExportStatus'
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          type: object
          properties:
            count:
              type: number
              format: integer
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Something went wrong
        code:
          type: integer
          example: 12345
  securitySchemes:
    3ScaleIdentity:
      type: apiKey
      in: header
      name: x-rh-identity
      description: >
        Base64-encoded JSON identity header provided by 3Scale. Contains an

        account number of the user issuing the request. Format of the JSON:

        ```

        {
            "identity": {
                "account_number": "account123",
                "org_id": "org123",
                "type": "User",
                "user" : {
                    "is_org_admin": true
                },
                "internal" : {
                    "org_id": "org123"
                }
            }
        }

        ```

        Encoded (via `base64 -w0`):

        `eyJpZGVudGl0eSI6IHsiYWNjb3VudF9udW1iZXIiOiJhY2NvdW50MTIzIiwib3JnX2lkIjoib3JnMTIzIiwidHlwZSI6IlVzZXIiLCJ1c2VyIjp7ImlzX29yZ19hZG1pbiI6dHJ1ZX0sImludGVybmFsIjp7Im9yZ19pZCI6Im9yZzEyMyJ9fX0K`

